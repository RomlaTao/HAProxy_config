# Global settings
global
    log stdout format raw local0 info
    maxconn 4000
    stats socket /tmp/haproxy.sock mode 660 level admin
    stats timeout 30s

    # SSL Configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets

# Default settings
defaults
    mode http
    log global
    option httplog
    timeout client 30s
    timeout connect 10s
    timeout server 240s
    timeout http-request 10s
    option forwardfor

# ===========================================
# HTTP Frontend - Secure redirect with exceptions
# Strategy: Allow specific endpoints via HTTP for monitoring/dev,
# redirect everything else to HTTPS for security
# ===========================================
frontend api_http
    bind *:80
    mode http

    # Define ACLs first
    acl is_health_check path /health
    acl is_discovery_ui path_beg /eureka
    acl is_actuator path_beg /actuator

    # Health check endpoint - bypass redirect (required for load balancer health checks)
    http-request return status 200 content-type text/plain string "OK" if is_health_check

    # Security: Redirect all other HTTP traffic to HTTPS (process redirects before backends)
    # redirect scheme https code 301 unless is_health_check or is_discovery_ui or is_actuator

    # Discovery Server UI access - allow HTTP for development environment
    use_backend discovery_backend if is_discovery_ui

    # Actuator endpoints - allow HTTP for monitoring tools (Prometheus, etc.)
    use_backend api_backend if is_actuator

    # All other requests to API backend
    default_backend api_backend

# HTTPS Frontend - Main entry point
frontend api_https
    bind *:443 ssl crt /usr/local/etc/haproxy/ssl/haproxy.pem
    mode http
    log global
    option httplog
    option logasap
    option log-health-checks

    # Debug logging for HTTPS requests
    capture request header Host len 32
    capture request header Content-Type len 32
    capture request header Content-Length len 10

    # Add secure headers
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-Forwarded-Port %[dst_port]

    # Security Headers
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"

    # Discovery Server UI access (reuse ACL from HTTP frontend)
    acl is_discovery_ui path_beg /eureka
    use_backend discovery_backend if is_discovery_ui

    # Default to API backend for all other HTTPS requests
    default_backend api_backend

# Backend configuration for API services (Dynamic container names)
backend api_backend
    balance roundrobin
    option httpchk GET /actuator/health
    option http-buffer-request

    # Backend servers using container names (more flexible for deployment)
    server api-service-1 api-service-1:8080 check port 8080
    server api-service-2 api-service-2:8080 check port 8080

# Backend configuration for Discovery Server
backend discovery_backend
    balance roundrobin
    option httpchk GET /actuator/health

    # Discovery server using container name
    server discovery-server discovery-server:8761 check port 8761

# HAProxy Stats Page (HTTPS Only)
frontend stats_https
    bind *:8404 ssl crt /usr/local/etc/haproxy/ssl/haproxy.pem
    mode http

    # Basic Authentication (Optional)
    stats auth admin:12345

    stats enable
    stats uri /
    stats refresh 10s
    stats show-legends
    stats admin if TRUE

    # Security headers cho stats page
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"

# HTTP Frontend cho Stats (DEVELOPMENT ONLY - Comment out in production)
# frontend stats_http
#     bind *:8403
#     mode http
#     
#     # Basic Authentication
#     stats auth admin:12345
#     
#     stats enable
#     stats uri /
#     stats refresh 10s
#     stats show-legends
#     stats admin if TRUE

# Use HTTPS stats only for production security
frontend stats_http
    bind *:8403
    mode http
    
    # Redirect HTTP stats to HTTPS for security
    redirect scheme https code 301 
